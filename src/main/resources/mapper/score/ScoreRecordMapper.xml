<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.orange.score.database.score.dao.ScoreRecordMapper">
    <resultMap id="BaseResultMap" type="com.orange.score.database.score.model.ScoreRecord">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="accept_number" jdbcType="VARCHAR" property="acceptNumber"/>
        <result column="indicator_id" jdbcType="INTEGER" property="indicatorId"/>
        <result column="indicator_name" jdbcType="VARCHAR" property="indicatorName"/>
        <result column="batch_id" jdbcType="INTEGER" property="batchId"/>
        <result column="person_id" jdbcType="INTEGER" property="personId"/>
        <result column="person_name" jdbcType="VARCHAR" property="personName"/>
        <result column="person_id_num" jdbcType="VARCHAR" property="personIdNum"/>
        <result column="company_id" jdbcType="INTEGER" property="companyId"/>
        <result column="company_name" jdbcType="VARCHAR" property="companyName"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="score_value" jdbcType="DECIMAL" property="scoreValue"/>
        <result column="item_id" jdbcType="INTEGER" property="itemId"/>
        <result column="accept_date" jdbcType="DATE" property="acceptDate"/>
        <result column="submit_date" jdbcType="DATE" property="submitDate"/>
        <result column="score_date" jdbcType="DATE" property="scoreDate"/>
        <result column="op_user_id" jdbcType="INTEGER" property="opUserId"/>
        <result column="op_user" jdbcType="VARCHAR" property="opUser"/>
        <result column="op_role_id" jdbcType="INTEGER" property="opRoleId"/>
        <result column="op_role" jdbcType="VARCHAR" property="opRole"/>
        <result column="score_detail" jdbcType="VARCHAR" property="scoreDetail"/>
        <result column="c_time" jdbcType="TIMESTAMP" property="cTime"/>
    </resultMap>
    <select id="selectIdentityInfo" resultMap="BaseResultMap">
        select ltab.*,rtab.notscore SCORE_VALUE<!--当做未打分数量--> from (select
        sr.person_id,
        max(sr.person_name) person_name,
        max(sr.person_id_num) person_id_num,
        max(sr.company_name) company_name,
        max(sr.accept_date) accept_date,
        max(i.luohu_number) accept_number<!--当做公安落户编号-->
        from (((t_pb_score_record sr inner join t_identity_info i
        on sr.person_id=i.id) left JOIN t_house_other ho on i.ID=ho.IDENTITY_INFO_ID) left JOIN t_house_relationship hr ON i.ID=hr.IDENTITY_INFO_ID)
        LEFT JOIN t_house_move hm ON hm.IDENTITY_INFO_ID=i.ID
        <where>
            i.cancel_status = 0
            <if test="item.status!=null">
                and sr.status in
                <foreach item="it" collection="item.status" open="(" separator="," close=")">
                    #{it}
                </foreach>
            </if>
            <if test="item.batchId!=null">
                and sr.batch_id=#{item.batchId}
            </if>
            <if test="item.opRoleId!=null">
                and sr.op_role_id in
                <foreach item="it" collection="item.opRoleId" open="(" separator="," close=")">
                    #{it}
                </foreach>
            </if>
            <if test="item.personIdNum!=null">
                and sr.person_id_num like concat(concat('%',#{item.personIdNum}),'%')
            </if>
            <if test="item.companyId!=null">
                and i.company_id = #{item.companyId}
            </if>
            <if test="item.rightProperty==1">
                and i.rightProperty = #{item.rightProperty}
                and hm.RENTHOUSEADDRESS is null
            </if>
            <if test="item.rightProperty==2">
                and (i.rightProperty !=1 or hm.RENTHOUSEADDRESS is not null)
            </if>
            <if test="item.cultureDegree!=null">
                and ho.culture_degree = #{item.cultureDegree}
            </if>
            <if test="item.providentFund!=null">
                and ho.PROVIDENT_FUND = #{item.providentFund}
            </if>
            <if test="item.soldierMeritorious!=null">
                and ho.soldier_meritorious = #{item.soldierMeritorious}
            </if>
            <if test="item.inTianjin==1">
                and (hr.inTianjin = #{item.inTianjin} or hr.isSpousesoldier=1)
            </if>
            <if test="item.inTianjin==2">
                and hr.inTianjin = #{item.inTianjin}
            </if>
            <if test="item.personName!=null">
                and sr.person_name like concat(concat('%',#{item.personName}),'%')
            </if>
            <if test="item.acceptAddressId!=null">
                and i.accept_address_id = #{item.acceptAddressId}
            </if>
            <if test="item.acceptDate!=null">
                and TO_CHAR(sr.accept_date,'yyyy-mm-dd') = #{item.acceptDate}
            </if>
        </where>
        group by sr.person_id
        <if test="item.orderBy!=null and item.orderType!=null">
            order by ${item.orderBy} ${item.orderType}
        </if>
        <if test="item.orderBy==null">
            order by sr.person_id desc
        </if>
        ) ltab left join (
        SELECT count(1) notscore,tpb.person_id FROM t_pb_score_record tpb
        <where>
            tpb.status!=4
        <if test="item.batchId!=null">
            and tpb.batch_id=#{item.batchId}
        </if>
        <if test="item.opRoleId!=null">
            and tpb.op_role_id in
            <foreach item="it" collection="item.opRoleId" open="(" separator="," close=")">
                #{it}
            </foreach>
        </if>
        <if test="item.personIdNum!=null">
            and tpb.person_id_num like concat(concat('%',#{item.personIdNum}),'%')
        </if>
        <if test="item.personName!=null">
            and tpb.person_name like concat(concat('%',#{item.personName}),'%')
        </if>
        <if test="item.acceptDate!=null">
            and TO_CHAR(tpb.accept_date,'yyyy-mm-dd') = #{item.acceptDate}
        </if>
    </where>
      group by tpb.person_id ) rtab on ltab.person_id=rtab.person_id

    </select>

    <select id="selectIdentityInfo_1" resultMap="BaseResultMap">
        select t1.id              PERSON_ID,
        t1.name            PERSON_NAME,
        t1.id_number       PERSON_ID_NUM,
        t1.RENSHEPASS_TIME ACCEPT_DATE,
        t1.LUOHU_NUMBER    accept_number,
        t2.company_name    company_name
        from t_identity_info t1,t_company_info t2
        <where>
            t1.batch_id in (select id from t_batch_conf where status = 1)
            /*and t1.MATERIALSTATUS = 1*/
            and t1.company_id=t2.id
            <if test="item.personIdNum!=null">
                and t1.ID_NUMBER=#{item.personIdNum}
            </if>
            <if test="item.personName!=null">
                and t1.name=#{item.personName}
            </if>
            <if test="item.acceptAddressId!=null">
                and t1.ACCEPT_ADDRESS_ID=#{item.acceptAddressId}
            </if>
            <if test="item.opRoleId!=null">
                and t1.id_number in (
                    select PERSON_ID_NUM from t_pb_score_record where batch_id IN (SELECT id FROM t_batch_conf WHERE status = 1) and status=5 and OP_ROLE_ID in
                        <foreach item="it" collection="item.opRoleId" open="(" separator="," close=")">
                            #{it}
                        </foreach>
                )
            </if>
        </where>
    </select>

    <select id="getSupplyDate" resultMap="BaseResultMap">
        select min(SUPPLYDATE) SUPPLYDATE
        from t_pb_score_record t1
        <where>
            t1.batch_id in (select id from t_batch_conf where status = 1)
            <if test="item.personId!=null">
                and t1.person_id=#{item.personId}
            </if>
            <if test="item.opRoleId!=null">
                and t1.OP_ROLE_ID in
                <foreach item="it" collection="item.opRoleId" open="(" separator="," close=")">
                    #{it}
                </foreach>
            </if>
        </where>
    </select>

    <select id="selectIsPreviewed" resultMap="BaseResultMap">
        select t1.id           person_id,
               name            person_name,
               id_number       person_id_num,
               t2.company_name company_name
        from t_identity_info t1, t_company_info t2
        where batch_id in ( select id from t_batch_conf where status = 1 )
              and UNION_APPROVE_STATUS_1 = 2
              and UNION_APPROVE_STATUS_2 = 2
              and t1.company_id = t2.id
            <if test="item.isPreviewed != null">
              and instr( nvl(ISPREVIEWD,'k'), #{item.isPreviewed})>0
            </if>
            <if test="item.no != null">
                and instr( nvl(ISPREVIEWD,'k'), #{item.no})=0
            </if>
            <if test="item.personIdNum!=null">
                and t1.ID_NUMBER = #{item.personIdNum}
            </if>
        <if test="item.personName!=null">
            and t1.NAME = #{item.personName}
        </if>
        <if test="item.acceptAddressId!=null">
            and t1.ACCEPT_ADDRESS_ID=#{item.acceptAddressId}
        </if>
    </select>
    <select id="selectIndicatorIdsByIdentityInfoIdAndRoleIds" resultMap="BaseResultMap">
        select indicator_id,
        op_role_id,
        max(op_role) op_role,
        max(status) status,
        max(id) id,
        max(SCORE_DETAIL) SCORE_DETAIL
        from t_pb_score_record
        where person_id=#{identityInfoId} and op_role_id in
        <foreach item="item" collection="roles" open="(" separator="," close=")">
            #{item}
        </foreach>
        group by indicator_id,op_role_id
        order by indicator_id
    </select>
    <select id="selectIndicatorIdsByIdentityInfoIdAndRoleIdsAndIndicatorId"
            resultMap="BaseResultMap">
        select indicator_id,op_role_id,max(op_role) op_role,max(status) status,max(id) id from t_pb_score_record
        where
        person_id=#{identityInfoId}
        and indicator_id=#{indicatorId}
        and op_role_id in
        <foreach item="item" collection="roles" open="(" separator="," close=")">
            #{item}
        </foreach>
        group by indicator_id,op_role_id
        order by indicator_id
    </select>

    <select id="provideDataToPolice" resultMap="BaseResultMap">
        select t2.person_id_num,t1.id,t2.person_name,t2.score_value from t_identity_info t1,
        (
        select a.person_id_num,max(a.person_name) person_name,round(nvl(sum(a.SCORE), 0),2) score_value
        from
        (
        /*select t.PERSON_NAME, t.OP_ROLE,t.person_id_num,t.score_value as score from t_pb_score_record t where
        t.indicator_id!=3 and t.indicator_id!=14 2020年2月19日 替换sql 语句*/
        /* 2020年6月19日 */
        select t.PERSON_NAME, t.OP_ROLE, t.person_id_num, t.score_value as score  from t_pb_score_record t where t.indicator_id not in (3,14,1003,1022, 1025, 1030, 1021, 1031)
            <if test="item.id!=null">
                and t.batch_id = #{item.id}
            </if>
        union all
        select max(t.PERSON_NAME) PERSON_NAME, max(t.OP_ROLE) OP_ROLE, t.person_id_num, max(t.score_value) as score from  t_pb_score_record t where t.indicator_id=3
            <if test="item.id!=null">
                and t.batch_id = #{item.id}
            </if>
            group by t.person_id_num
        union all
        select max(t.PERSON_NAME) PERSON_NAME, max(t.OP_ROLE) OP_ROLE, t.person_id_num,decode(sum(t.score_value),40,20,0) as score from t_pb_score_record t where t.indicator_id=14
            <if test="item.id!=null">
                and t.batch_id = #{item.id}
            </if>
            group by t.person_id_num
        union all
        select t1.PERSON_NAME, t1.OP_ROLE, t1.person_id_num, t1.score_value as score        from t_pb_score_record t1, t_identity_info t2
        where  t1.INDICATOR_id in ('1022')        and t1.person_id = t2.id    and t2.is201826doc = 1 and t1.person_id in (
                                                select t3.person_id from  t_identity_info t1, t_house_move t2,t_pb_score_record t3
                                                    where  t1.batch_id in (select id from t_batch_conf where status=1)
                                                    and t1.id=t2.identity_info_id
                                                    and t1.IS201826DOC=1
                                                    and t3.op_role in ( '市住建委' ,'规自局')
                                                    and t3.INDICATOR_ID!='1020'
                                                    and t3.SCORE_VALUE in (0,40)
                                                and t3.person_id=t1.id
                                                )
            <if test="item.id!=null">
                and t1.batch_id = #{item.id}
            </if>
        union all
        select  min(person_name) person_name,min(op_role) op_role,min(PERSON_ID_NUM) person_id_num,sum(score_value) score from t_pb_score_record  where INDICATOR_id in ('1025', '1030', '1021', '1031')
            <if test="item.id!=null">
                and batch_id = #{item.id}
            </if>
            group by person_id_num
        ) a
        group by a.person_id_num
        ) t2
        where upper(t1.id_number) = upper(t2.person_id_num) AND t1.CANCEL_STATUS=0 and t1.BATCH_ID=#{item.id}
        /*and t2.score_value>=146*/

        <if test="item.scoreValue!=null">
            and t2.score_value >= #{item.scoreValue}
        </if>
        order by t2.score_value desc
    </select>
    
    <select id="exportScored" resultType="java.util.Map">
        select person_id id,
            INDICATOR_NAME,
            person_name,
            person_id_num,
            company_name,
            ACCEPT_DATE,
            SUBMIT_DATE,
            SCORE_DATE,
            OP_ROLE,OP_USER,
               case when STATUS=4 then '已打分' end status,
               round(SCORE_VALUE,2) SCORE_VALUE
        from t_pb_score_record
        where batch_id in (select ID from t_batch_conf where status = 1)
            <if test="item.status!=null">
                and status=#{item.status}
            </if>
            <if test="item.batch_id!=null">
                and batch_id=#{item.batch_id}
            </if>
            <if test="item.acceptAddressId!=null">
                and ACCEPT_ADDRESS_ID=#{item.acceptAddressId}
            </if>
            <if test="item.personIdNum!=null">
                and person_id_num=#{item.personIdNum}
            </if>
            <if test="item.opRoleId!=null">
                and OP_ROLE_ID in
                <foreach item="it" collection="item.opRoleId" open="(" separator="," close=")">
                    #{it}
                </foreach>
            </if>
            <if test="item.indicatorId!=null">
                and INDICATOR_ID = #{item.indicatorId}
            </if>
            <if test="item.scoreDate!=null">
                and to_char(score_date, 'yyyy-MM-dd') = #{item.scoreDate}
            </if>
    </select>

    <select id="exportReview" resultType="java.util.Map">
        select ACCEPT_NUMBER,
        INDICATOR_NAME,
        PERSON_NAME,
        PERSON_ID_NUM,
        PERSON_MOBILE_PHONE,
        COMPANY_NAME,
        OP_ROLE,
        OP_USER,
        TOREVIEWTIME,
        TOREVIEWREASON,
        IDREVIEWEND
        from t_pb_score_record
        where batch_id in (select ID from t_batch_conf where status = 1)
        and op_role_id in
            <foreach item="item" collection="roles" open="(" separator="," close=")">
                #{item}
            </foreach>
        <if test="item.acceptAddressId!=null">
            and ACCEPT_ADDRESS_ID=#{item.acceptAddressId}
        </if>
        <if test="item.guizijuOrZhujianwei!=null">
            and guizijuOrZhujianwei=#{item.guizijuOrZhujianwei}
        </if>
        and TOREVIEWREASON is not null
    </select>
</mapper>
