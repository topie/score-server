<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.orange.score.database.score.dao.ScoreRecordMapper">
    <resultMap id="BaseResultMap" type="com.orange.score.database.score.model.ScoreRecord">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="accept_number" jdbcType="VARCHAR" property="acceptNumber"/>
        <result column="indicator_id" jdbcType="INTEGER" property="indicatorId"/>
        <result column="indicator_name" jdbcType="VARCHAR" property="indicatorName"/>
        <result column="batch_id" jdbcType="INTEGER" property="batchId"/>
        <result column="person_id" jdbcType="INTEGER" property="personId"/>
        <result column="person_name" jdbcType="VARCHAR" property="personName"/>
        <result column="person_id_num" jdbcType="VARCHAR" property="personIdNum"/>
        <result column="company_id" jdbcType="INTEGER" property="companyId"/>
        <result column="company_name" jdbcType="VARCHAR" property="companyName"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="score_value" jdbcType="DECIMAL" property="scoreValue"/>
        <result column="item_id" jdbcType="INTEGER" property="itemId"/>
        <result column="accept_date" jdbcType="DATE" property="acceptDate"/>
        <result column="submit_date" jdbcType="DATE" property="submitDate"/>
        <result column="score_date" jdbcType="DATE" property="scoreDate"/>
        <result column="op_user_id" jdbcType="INTEGER" property="opUserId"/>
        <result column="op_user" jdbcType="VARCHAR" property="opUser"/>
        <result column="op_role_id" jdbcType="INTEGER" property="opRoleId"/>
        <result column="op_role" jdbcType="VARCHAR" property="opRole"/>
        <result column="score_detail" jdbcType="VARCHAR" property="scoreDetail"/>
        <result column="c_time" jdbcType="TIMESTAMP" property="cTime"/>
    </resultMap>
    <select id="selectIdentityInfo" resultMap="BaseResultMap">
        select ltab.*,rtab.notscore SCORE_VALUE<!--当做未打分数量--> from (select
        sr.person_id,
        max(sr.person_name) person_name,
        max(sr.person_id_num) person_id_num,
        max(sr.company_name) company_name,
        max(sr.accept_date) accept_date,
        max(i.luohu_number) accept_number<!--当做公安落户编号-->
        from t_pb_score_record sr inner join t_identity_info i
        on sr.person_id=i.id
        <where>
            i.cancel_status = 0
            <if test="item.status!=null">
                and sr.status in
                <foreach item="it" collection="item.status" open="(" separator="," close=")">
                    #{it}
                </foreach>
            </if>
            <if test="item.batchId!=null">
                and sr.batch_id=#{item.batchId}
            </if>
            <if test="item.opRoleId!=null">
                and sr.op_role_id in
                <foreach item="it" collection="item.opRoleId" open="(" separator="," close=")">
                    #{it}
                </foreach>
            </if>
            <if test="item.personIdNum!=null">
                and sr.person_id_num like concat(concat('%',#{item.personIdNum}),'%')
            </if>
            <if test="item.companyId!=null">
                and i.company_id = #{item.companyId}
            </if>
            <if test="item.personName!=null">
                and sr.person_name like concat(concat('%',#{item.personName}),'%')
            </if>
            <if test="item.acceptAddressId!=null">
                and i.accept_address_id = #{item.acceptAddressId}
            </if>
            <if test="item.acceptDate!=null">
                and TO_CHAR(sr.accept_date,'yyyy-mm-dd') = #{item.acceptDate}
            </if>
        </where>
        group by sr.person_id
        <if test="item.orderBy!=null and item.orderType!=null">
            order by ${item.orderBy} ${item.orderType}
        </if>
        <if test="item.orderBy==null">
            order by sr.person_id desc
        </if>
        ) ltab left join (
        SELECT count(1) notscore,tpb.person_id FROM t_pb_score_record tpb
        <where>
            tpb.status!=4
        <if test="item.batchId!=null">
            and tpb.batch_id=#{item.batchId}
        </if>
        <if test="item.opRoleId!=null">
            and tpb.op_role_id in
            <foreach item="it" collection="item.opRoleId" open="(" separator="," close=")">
                #{it}
            </foreach>
        </if>
        <if test="item.personIdNum!=null">
            and tpb.person_id_num like concat(concat('%',#{item.personIdNum}),'%')
        </if>
        <if test="item.personName!=null">
            and tpb.person_name like concat(concat('%',#{item.personName}),'%')
        </if>
        <if test="item.acceptDate!=null">
            and TO_CHAR(tpb.accept_date,'yyyy-mm-dd') = #{item.acceptDate}
        </if>
    </where>
      group by tpb.person_id ) rtab on ltab.person_id=rtab.person_id

    </select>
    <select id="selectIsPreviewed" resultMap="BaseResultMap">
        select t1.id           person_id,
               name            person_name,
               id_number       person_id_num,
               t2.company_name company_name
        from t_identity_info t1, t_company_info t2
        where batch_id = 1021
              and UNION_APPROVE_STATUS_1 = 2
              and UNION_APPROVE_STATUS_2 = 2
              and t1.company_id = t2.id
              and ISPREVIEWD is null

    </select>
    <select id="selectIndicatorIdsByIdentityInfoIdAndRoleIds" resultMap="BaseResultMap">
        select indicator_id,
        op_role_id,
        max(op_role) op_role,
        max(status) status,
        max(id) id,
        max(SCORE_DETAIL) SCORE_DETAIL
        from t_pb_score_record
        where person_id=#{identityInfoId} and op_role_id in
        <foreach item="item" collection="roles" open="(" separator="," close=")">
            #{item}
        </foreach>
        group by indicator_id,op_role_id
        order by indicator_id
    </select>
    <select id="selectIndicatorIdsByIdentityInfoIdAndRoleIdsAndIndicatorId"
            resultMap="BaseResultMap">
        select indicator_id,op_role_id,max(op_role) op_role,max(status) status,max(id) id from t_pb_score_record
        where
        person_id=#{identityInfoId}
        and indicator_id=#{indicatorId}
        and op_role_id in
        <foreach item="item" collection="roles" open="(" separator="," close=")">
            #{item}
        </foreach>
        group by indicator_id,op_role_id
        order by indicator_id
    </select>

    <select id="provideDataToPolice" resultMap="BaseResultMap">
        select t2.person_id_num,t1.id,t2.person_name,t2.score_value from t_identity_info t1,
        (
        select a.person_id_num,max(a.person_name) person_name,round(nvl(sum(a.SCORE), 0),2) score_value
        from
        (
        select t.PERSON_NAME, t.OP_ROLE,t.person_id_num,t.score_value as score from t_pb_score_record t where
        t.indicator_id!=3 and t.indicator_id!=14
        /*and batch_id = 1011*/

        <if test="item.id!=null">
            and batch_id = #{item.id}
        </if>
        union all
        select max(t.PERSON_NAME) PERSON_NAME, max(t.OP_ROLE) OP_ROLE, t.person_id_num, max(t.score_value) as score from
        t_pb_score_record t where t.indicator_id=3
        /*and t.batch_id = 1011*/
        <if test="item.id!=null">
            and t.batch_id = #{item.id}
        </if>
        group by t.person_id_num
        union all
        select max(t.PERSON_NAME) PERSON_NAME, max(t.OP_ROLE) OP_ROLE, t.person_id_num,
        decode(sum(t.score_value),20,10,0) as score from t_pb_score_record t where t.indicator_id=14
        /*and t.batch_id = 1011 */
        <if test="item.id!=null">
            and t.batch_id = #{item.id}
        </if>
        group by t.person_id_num
        ) a
        group by a.person_id_num
        ) t2
        where upper(t1.id_number) = upper(t2.person_id_num) AND t1.CANCEL_STATUS=0 and t1.BATCH_ID=#{item.id}
        /*and t2.score_value>=146*/

        <if test="item.scoreValue!=null">
            and t2.score_value >= #{item.scoreValue}
        </if>
        order by t2.score_value desc
    </select>
</mapper>
